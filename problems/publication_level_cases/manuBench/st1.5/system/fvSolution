/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM Extend Project: Open Source CFD        |
|  \\    /   O peration     | Version:  1.6-ext                               |
|   \\  /    A nd           | Web:      www.extend-project.de                 |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    flu
    {
        solver           BiCGStab;
        preconditioner   Cholesky;
        tolerance        5e-8;
        relTol           1e-1;
        minIter          1;
        maxIter          30;
        nDirections      5;
    };
    
    flu_adj
    {
        solver           BiCGStab;
        preconditioner   Cholesky;
        tolerance        5e-8;
        relTol           1e-1;
        minIter          1;
        maxIter          300;
        nDirections      5;
    };

    "(prec.*)"
    {
        /*
        solver          PBiCG;
        preconditioner  DILU;
        */
        solver          GAMG;
        smoother        DILU;
        cacheAgglomeration  true;
        nCellsInCoarsestLevel 50;
        agglomerator    faceAreaPair;
        mergeLevels     1;
        tolerance       1e-08;
        relTol          1e-1;
        minIter         0;
        maxIter         10;
    }

    "(dec.*)"
    {
        /*
        solver          PBiCG;
        preconditioner  DILU;
        */
        solver          GAMG;
        smoother        DILU;
        cacheAgglomeration  true;
        nCellsInCoarsestLevel 50;
        agglomerator    faceAreaPair;
        mergeLevels     1;
        tolerance       1e-08;
        relTol          1e-1;
        minIter         1;
        maxIter         10;
    }
    
    p
    {
        /*
        solver          PCG;
        preconditioner  DIC;
        */
        solver          GAMG;
        smoother        DIC;
        cacheAgglomeration  true;
        nCellsInCoarsestLevel 50;
        agglomerator    faceAreaPair;
        mergeLevels     1;
        tolerance       1e-08;
        relTol          0.01;
        minIter         0;
        maxIter         5;
    }
    
    U
    {
        /*
        solver          PBiCG;
        preconditioner  DILU;
        */
        solver          GAMG;
        smoother        DILU;
        cacheAgglomeration  true;
        nCellsInCoarsestLevel 50;
        agglomerator    faceAreaPair;
        mergeLevels     1;
        tolerance       1e-08;
        relTol          0.1;
        minIter         0;
        maxIter         10;
    }

    T
    {
        /*
        solver          PBiCG;
        preconditioner  DILU;
        */
        solver          GAMG;
        smoother        DILU;
        cacheAgglomeration  true;
        nCellsInCoarsestLevel 50;
        agglomerator    faceAreaPair;
        mergeLevels     1;
        tolerance       1e-08;
        relTol          0.1;
        minIter         1;
        maxIter         10;
    }

    k
    {
        /*
        solver          PBiCG;
        preconditioner  DILU;
        */
        solver          GAMG;
        smoother        DILU;
        cacheAgglomeration  true;
        nCellsInCoarsestLevel 50;
        agglomerator    faceAreaPair;
        mergeLevels     1;
        tolerance       1e-05;
        relTol          0.1;
        minIter         1;
        maxIter         10;
    }

    epsilon
    {
        /*
        solver          PBiCG;
        preconditioner  DILU;
        */
        solver          GAMG;
        smoother        DILU;
        cacheAgglomeration  true;
        nCellsInCoarsestLevel 50;
        agglomerator    faceAreaPair;
        mergeLevels     1;
        tolerance       1e-05;
        relTol          0.1;
        minIter         1;
        maxIter         10;
    }

    R
    {
        /*
        solver          PBiCG;
        preconditioner  DILU;
        */
        solver          GAMG;
        smoother        DILU;
        cacheAgglomeration  true;
        nCellsInCoarsestLevel 50;
        agglomerator    faceAreaPair;
        mergeLevels     1;
        tolerance       1e-05;
        relTol          0.1;
        minIter         1;
        maxIter         10;
    }
}

SIMPLE
{
    nNonOrthogonalCorrectors 0;
    pRefCell        0;
    pRefValue       0;
}

relaxationFactors
{
    rho             1;
    p               0.6;
    U               0.6;
    T               0.6;
    k               0.7;
    epsilon         0.7;
    R               0.7;
}

// ************************************************************************* //
